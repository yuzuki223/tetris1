*   commit 9d95a57abd59ab09b518e8a15ac14b815f6ffb63 (from 524bac4e0c1ed5b09904b660f64cd438935c803b)
|\  Merge: 524bac4 6270eb6
| | Author: First-name Family-name <username@example.com>
| | Date:   Fri May 12 15:41:05 2023 +0900
| | 
| |     Merge branch 'purple'
| | 
| | diff --git a/js/tetris.js b/js/tetris.js
| | index 61be278..943436e 100644
| | --- a/js/tetris.js
| | +++ b/js/tetris.js
| | @@ -22,7 +22,7 @@ var shapes = [
| |        1, 1, 1 ]
| |  ];
| |  var colors = [
| | -    'yellow', 'yellow', 'yellow', 'yellow', 'yellow', 'yellow', 'yellow'
| | +    'purple', 'purple', 'purple', 'purple', 'purple', 'purple', 'purple'
| |  ];
| |  
| |  // creates a new 4x4 shape in global variable 'current'
| | 
| * commit 6270eb6d26070a333f722bad13224f56cd1b9c26
| | Author: First-name Family-name <username@example.com>
| | Date:   Fri May 12 15:36:20 2023 +0900
| | 
| |     ミノの色を全部紫に変更
| | 
| | diff --git a/js/tetris.js b/js/tetris.js
| | index c888322..943436e 100644
| | --- a/js/tetris.js
| | +++ b/js/tetris.js
| | @@ -22,7 +22,7 @@ var shapes = [
| |        1, 1, 1 ]
| |  ];
| |  var colors = [
| | -    'blue', 'blue', 'blue', 'blue', 'blue', 'blue', 'blue'
| | +    'purple', 'purple', 'purple', 'purple', 'purple', 'purple', 'purple'
| |  ];
| |  
| |  // creates a new 4x4 shape in global variable 'current'
| | 
* | commit 524bac4e0c1ed5b09904b660f64cd438935c803b
|/  Author: First-name Family-name <username@example.com>
|   Date:   Fri May 12 15:37:32 2023 +0900
|   
|       ミノの色を全部黄色に変更
|   
|   diff --git a/js/tetris.js b/js/tetris.js
|   index c888322..61be278 100644
|   --- a/js/tetris.js
|   +++ b/js/tetris.js
|   @@ -22,7 +22,7 @@ var shapes = [
|          1, 1, 1 ]
|    ];
|    var colors = [
|   -    'blue', 'blue', 'blue', 'blue', 'blue', 'blue', 'blue'
|   +    'yellow', 'yellow', 'yellow', 'yellow', 'yellow', 'yellow', 'yellow'
|    ];
|    
|    // creates a new 4x4 shape in global variable 'current'
|   
*   commit 0cd5a05f43627d446a463e1eaf511b0b724c92f1 (from 195d39ac6652ec4bcd93bc3353f82eba0af7514e)
|\  Merge: 195d39a c31d1c5
| | Author: First-name Family-name <username@example.com>
| | Date:   Fri May 12 15:31:19 2023 +0900
| | 
| |     Merge branch 'blue'
| | 
| | diff --git a/js/tetris.js b/js/tetris.js
| | index f44ca55..c888322 100644
| | --- a/js/tetris.js
| | +++ b/js/tetris.js
| | @@ -22,7 +22,7 @@ var shapes = [
| |        1, 1, 1 ]
| |  ];
| |  var colors = [
| | -    'green', 'green', 'green', 'green', 'green', 'green', 'green'
| | +    'blue', 'blue', 'blue', 'blue', 'blue', 'blue', 'blue'
| |  ];
| |  
| |  // creates a new 4x4 shape in global variable 'current'
| | 
| * commit c31d1c5e08715a759a4220e4de22c52e6226c599
| | Author: First-name Family-name <username@example.com>
| | Date:   Fri May 12 15:20:12 2023 +0900
| | 
| |     ミノの色を全部青に変更
| | 
| | diff --git a/js/tetris.js b/js/tetris.js
| | index 8cf0c14..c888322 100644
| | --- a/js/tetris.js
| | +++ b/js/tetris.js
| | @@ -22,7 +22,7 @@ var shapes = [
| |        1, 1, 1 ]
| |  ];
| |  var colors = [
| | -    'cyan', 'orange', 'blue', 'yellow', 'red', 'green', 'purple'
| | +    'blue', 'blue', 'blue', 'blue', 'blue', 'blue', 'blue'
| |  ];
| |  
| |  // creates a new 4x4 shape in global variable 'current'
| | 
* | commit 195d39ac6652ec4bcd93bc3353f82eba0af7514e
|/  Author: First-name Family-name <username@example.com>
|   Date:   Fri May 12 15:12:30 2023 +0900
|   
|       ミノの色を全部緑に変更
|   
|   diff --git a/js/tetris.js b/js/tetris.js
|   index 8cf0c14..f44ca55 100644
|   --- a/js/tetris.js
|   +++ b/js/tetris.js
|   @@ -22,7 +22,7 @@ var shapes = [
|          1, 1, 1 ]
|    ];
|    var colors = [
|   -    'cyan', 'orange', 'blue', 'yellow', 'red', 'green', 'purple'
|   +    'green', 'green', 'green', 'green', 'green', 'green', 'green'
|    ];
|    
|    // creates a new 4x4 shape in global variable 'current'
| 
* commit d57de015ad34e83ed075aede4667e8616db21d8f
  Author: First-name Family-name <username@example.com>
  Date:   Fri May 12 15:04:36 2023 +0900
  
      ソースコードをインポート
  
  diff --git a/.quadnix/build.yml b/.quadnix/build.yml
  new file mode 100644
  index 0000000..be92530
  --- /dev/null
  +++ b/.quadnix/build.yml
  @@ -0,0 +1 @@
  +version: 0.1
  diff --git a/LICENSE.md b/LICENSE.md
  new file mode 100644
  index 0000000..b88b4ce
  --- /dev/null
  +++ b/LICENSE.md
  @@ -0,0 +1,21 @@
  +MIT License
  +
  +Copyright (c) 2012 Dionysis "dionyziz" Zindros dionyziz@gmail.com
  +
  +Permission is hereby granted, free of charge, to any person obtaining a copy
  +of this software and associated documentation files (the "Software"), to deal
  +in the Software without restriction, including without limitation the rights
  +to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  +copies of the Software, and to permit persons to whom the Software is
  +furnished to do so, subject to the following conditions:
  +
  +The above copyright notice and this permission notice shall be included in all
  +copies or substantial portions of the Software.
  +
  +THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  +IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  +FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  +AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  +LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  +OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
  +SOFTWARE.
  diff --git a/README.md b/README.md
  new file mode 100644
  index 0000000..ac87e2d
  --- /dev/null
  +++ b/README.md
  @@ -0,0 +1,13 @@
  +このリポジトリは https://github.com/dionyziz/canvas-tetris がオリジナルです。
  +
  +オリジナルのソースコードのLicense
  +=======
  +This version of tetris is MIT licensed:
  +
  +Copyright (C) 2012 Dionysis "dionyziz" Zindros <dionyziz@gmail.com>
  +
  +Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
  +
  +The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
  +
  +THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  diff --git a/index.html b/index.html
  new file mode 100644
  index 0000000..6a1ce43
  --- /dev/null
  +++ b/index.html
  @@ -0,0 +1,15 @@
  +<!DOCTYPE html>
  +<html>
  +    <head>
  +        <title>HTML5 Tetris</title>
  +        <link rel='stylesheet' href='style.css' />
  +    </head>
  +    <body>
  +        <audio id="clearsound" src="sound/pop.ogg" preload="auto"></audio>
  +        <canvas width='300' height='600'></canvas>
  +        <button id="playbutton" onclick="playButtonClicked();">Play</button>
  +        <script src='js/tetris.js'></script>
  +        <script src='js/controller.js'></script>
  +        <script src='js/render.js'></script>
  +    </body>
  +</html>
  diff --git a/js/controller.js b/js/controller.js
  new file mode 100644
  index 0000000..6e3fee5
  --- /dev/null
  +++ b/js/controller.js
  @@ -0,0 +1,13 @@
  +document.body.onkeydown = function( e ) {
  +    var keys = {
  +        37: 'left',
  +        39: 'right',
  +        40: 'down',
  +        38: 'rotate',
  +        32: 'drop'
  +    };
  +    if ( typeof keys[ e.keyCode ] != 'undefined' ) {
  +        keyPress( keys[ e.keyCode ] );
  +        render();
  +    }
  +};
  diff --git a/js/render.js b/js/render.js
  new file mode 100644
  index 0000000..9bda62f
  --- /dev/null
  +++ b/js/render.js
  @@ -0,0 +1,36 @@
  +var canvas = document.getElementsByTagName( 'canvas' )[ 0 ];
  +var ctx = canvas.getContext( '2d' );
  +var W = 300, H = 600;
  +var BLOCK_W = W / COLS, BLOCK_H = H / ROWS;
  +
  +// draw a single square at (x, y)
  +function drawBlock( x, y ) {
  +    ctx.fillRect( BLOCK_W * x, BLOCK_H * y, BLOCK_W - 1 , BLOCK_H - 1 );
  +    ctx.strokeRect( BLOCK_W * x, BLOCK_H * y, BLOCK_W - 1 , BLOCK_H - 1 );
  +}
  +
  +// draws the board and the moving shape
  +function render() {
  +    ctx.clearRect( 0, 0, W, H );
  +
  +    ctx.strokeStyle = 'black';
  +    for ( var x = 0; x < COLS; ++x ) {
  +        for ( var y = 0; y < ROWS; ++y ) {
  +            if ( board[ y ][ x ] ) {
  +                ctx.fillStyle = colors[ board[ y ][ x ] - 1 ];
  +                drawBlock( x, y );
  +            }
  +        }
  +    }
  +
  +    ctx.fillStyle = 'red';
  +    ctx.strokeStyle = 'black';
  +    for ( var y = 0; y < 4; ++y ) {
  +        for ( var x = 0; x < 4; ++x ) {
  +            if ( current[ y ][ x ] ) {
  +                ctx.fillStyle = colors[ current[ y ][ x ] - 1 ];
  +                drawBlock( currentX + x, currentY + y );
  +            }
  +        }
  +    }
  +}
  \ No newline at end of file
  diff --git a/js/tetris.js b/js/tetris.js
  new file mode 100644
  index 0000000..8cf0c14
  --- /dev/null
  +++ b/js/tetris.js
  @@ -0,0 +1,208 @@
  +var COLS = 10, ROWS = 20;
  +var board = [];
  +var lose;
  +var interval;
  +var intervalRender;
  +var current; // current moving shape
  +var currentX, currentY; // position of current shape
  +var freezed; // is current shape settled on the board?
  +var shapes = [
  +    [ 1, 1, 1, 1 ],
  +    [ 1, 1, 1, 0,
  +      1 ],
  +    [ 1, 1, 1, 0,
  +      0, 0, 1 ],
  +    [ 1, 1, 0, 0,
  +      1, 1 ],
  +    [ 1, 1, 0, 0,
  +      0, 1, 1 ],
  +    [ 0, 1, 1, 0,
  +      1, 1 ],
  +    [ 0, 1, 0, 0,
  +      1, 1, 1 ]
  +];
  +var colors = [
  +    'cyan', 'orange', 'blue', 'yellow', 'red', 'green', 'purple'
  +];
  +
  +// creates a new 4x4 shape in global variable 'current'
  +// 4x4 so as to cover the size when the shape is rotated
  +function newShape() {
  +    var id = Math.floor( Math.random() * shapes.length );
  +    var shape = shapes[ id ]; // maintain id for color filling
  +
  +    current = [];
  +    for ( var y = 0; y < 4; ++y ) {
  +        current[ y ] = [];
  +        for ( var x = 0; x < 4; ++x ) {
  +            var i = 4 * y + x;
  +            if ( typeof shape[ i ] != 'undefined' && shape[ i ] ) {
  +                current[ y ][ x ] = id + 1;
  +            }
  +            else {
  +                current[ y ][ x ] = 0;
  +            }
  +        }
  +    }
  +    
  +    // new shape starts to move
  +    freezed = false;
  +    // position where the shape will evolve
  +    currentX = 5;
  +    currentY = 0;
  +}
  +
  +// clears the board
  +function init() {
  +    for ( var y = 0; y < ROWS; ++y ) {
  +        board[ y ] = [];
  +        for ( var x = 0; x < COLS; ++x ) {
  +            board[ y ][ x ] = 0;
  +        }
  +    }
  +}
  +
  +// keep the element moving down, creating new shapes and clearing lines
  +function tick() {
  +    if ( valid( 0, 1 ) ) {
  +        ++currentY;
  +    }
  +    // if the element settled
  +    else {
  +        freeze();
  +        valid(0, 1);
  +        clearLines();
  +        if (lose) {
  +            clearAllIntervals();
  +            return false;
  +        }
  +        newShape();
  +    }
  +}
  +
  +// stop shape at its position and fix it to board
  +function freeze() {
  +    for ( var y = 0; y < 4; ++y ) {
  +        for ( var x = 0; x < 4; ++x ) {
  +            if ( current[ y ][ x ] ) {
  +                board[ y + currentY ][ x + currentX ] = current[ y ][ x ];
  +            }
  +        }
  +    }
  +    freezed = true;
  +}
  +
  +// returns rotates the rotated shape 'current' perpendicularly anticlockwise
  +function rotate( current ) {
  +    var newCurrent = [];
  +    for ( var y = 0; y < 4; ++y ) {
  +        newCurrent[ y ] = [];
  +        for ( var x = 0; x < 4; ++x ) {
  +            newCurrent[ y ][ x ] = current[ 3 - x ][ y ];
  +        }
  +    }
  +
  +    return newCurrent;
  +}
  +
  +// check if any lines are filled and clear them
  +function clearLines() {
  +    for ( var y = ROWS - 1; y >= 0; --y ) {
  +        var rowFilled = true;
  +        for ( var x = 0; x < COLS; ++x ) {
  +            if ( board[ y ][ x ] == 0 ) {
  +                rowFilled = false;
  +                break;
  +            }
  +        }
  +        if ( rowFilled ) {
  +            document.getElementById( 'clearsound' ).play();
  +            for ( var yy = y; yy > 0; --yy ) {
  +                for ( var x = 0; x < COLS; ++x ) {
  +                    board[ yy ][ x ] = board[ yy - 1 ][ x ];
  +                }
  +            }
  +            ++y;
  +        }
  +    }
  +}
  +
  +function keyPress( key ) {
  +    switch ( key ) {
  +        case 'left':
  +            if ( valid( -1 ) ) {
  +                --currentX;
  +            }
  +            break;
  +        case 'right':
  +            if ( valid( 1 ) ) {
  +                ++currentX;
  +            }
  +            break;
  +        case 'down':
  +            if ( valid( 0, 1 ) ) {
  +                ++currentY;
  +            }
  +            break;
  +        case 'rotate':
  +            var rotated = rotate( current );
  +            if ( valid( 0, 0, rotated ) ) {
  +                current = rotated;
  +            }
  +            break;
  +        case 'drop':
  +            while( valid(0, 1) ) {
  +                ++currentY;
  +            }
  +            tick();
  +            break;
  +    }
  +}
  +
  +// checks if the resulting position of current shape will be feasible
  +function valid( offsetX, offsetY, newCurrent ) {
  +    offsetX = offsetX || 0;
  +    offsetY = offsetY || 0;
  +    offsetX = currentX + offsetX;
  +    offsetY = currentY + offsetY;
  +    newCurrent = newCurrent || current;
  +
  +    for ( var y = 0; y < 4; ++y ) {
  +        for ( var x = 0; x < 4; ++x ) {
  +            if ( newCurrent[ y ][ x ] ) {
  +                if ( typeof board[ y + offsetY ] == 'undefined'
  +                  || typeof board[ y + offsetY ][ x + offsetX ] == 'undefined'
  +                  || board[ y + offsetY ][ x + offsetX ]
  +                  || x + offsetX < 0
  +                  || y + offsetY >= ROWS
  +                  || x + offsetX >= COLS ) {
  +                    if (offsetY == 1 && freezed) {
  +                        lose = true; // lose if the current shape is settled at the top most row
  +                        document.getElementById('playbutton').disabled = false;
  +                    } 
  +                    return false;
  +                }
  +            }
  +        }
  +    }
  +    return true;
  +}
  +
  +function playButtonClicked() {
  +    newGame();
  +    document.getElementById("playbutton").disabled = true;
  +}
  +
  +function newGame() {
  +    clearAllIntervals();
  +    intervalRender = setInterval( render, 30 );
  +    init();
  +    newShape();
  +    lose = false;
  +    interval = setInterval( tick, 400 );
  +}
  +
  +function clearAllIntervals(){
  +    clearInterval( interval );
  +    clearInterval( intervalRender );
  +}
  \ No newline at end of file
  diff --git a/sound/pop.ogg b/sound/pop.ogg
  new file mode 100644
  index 0000000..72c9345
  Binary files /dev/null and b/sound/pop.ogg differ
  diff --git a/style.css b/style.css
  new file mode 100644
  index 0000000..e27ed9b
  --- /dev/null
  +++ b/style.css
  @@ -0,0 +1,18 @@
  +canvas {
  +    display: block;
  +    margin: auto;
  +    border: 1px solid black;
  +}
  +
  +#playbutton {
  +    width: 100px;
  +    height: 50px;
  +    display: block;
  +    margin: auto;
  +    margin-top: 10px;
  +    font-family: Arial, sans-serif;
  +    font-size: 30px;
  +    font-weight: bold;
  +    background-color: white;
  +    cursor: pointer;
  +}
  \ No newline at end of file
